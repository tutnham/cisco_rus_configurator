#!/usr/bin/env python3
"""
Cisco Translator - Enhanced Launcher
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import sys
import subprocess
import importlib.util
from pathlib import Path

def check_python_version():
    """Check Python version"""
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    return True

def check_dependency(package_name, import_name=None):
    """Check if a package is installed"""
    if import_name is None:
        import_name = package_name
        
    spec = importlib.util.find_spec(import_name)
    if spec is None:
        return False
    return True

def install_dependencies():
    """Install missing dependencies"""
    requirements_file = Path("requirements.txt")
    if not requirements_file.exists():
        print("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
        
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    try:
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
        ])
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def main():
    """Main launcher function"""
    print("üöÄ Cisco Translator - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # Check Python version
    if not check_python_version():
        return 1
    
    # Check critical dependencies
    dependencies = [
        ("flet", "flet"),
        ("paramiko", "paramiko"),
        ("cryptography", "cryptography"),
    ]
    
    missing_deps = []
    for pkg_name, import_name in dependencies:
        if check_dependency(pkg_name, import_name):
            print(f"‚úÖ {pkg_name}")
        else:
            print(f"‚ùå {pkg_name} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing_deps.append(pkg_name)
    
    # Install missing dependencies
    if missing_deps:
        print(f"\nüì¶ –ù–∞–π–¥–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {', '.join(missing_deps)}")
        response = input("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): ").lower().strip()
        
        if response in ['y', 'yes', '–¥–∞', '–¥']:
            if not install_dependencies():
                return 1
        else:
            print("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            print("   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install -r requirements.txt")
            return 1
    
    # Launch application
    print("\nüéØ –ó–∞–ø—É—Å–∫ Cisco Translator...")
    try:
        from main import main as app_main
        app_main()
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        return 0
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main())