### ROLE ###

Act as a senior software engineer and technical requirements analyst.

### CONTEXT ###

Background: The project "Cisco Translator" aims to develop a software application that facilitates the use of Cisco CLI commands through a user-friendly interface with Russian translation.

Key Information: The application will connect to Cisco network devices via SSH, Telnet, or COM port, provide a list of available commands in Russian, allow users to select and execute commands, and support frequently used command groups (macros).

### TASK ###

Your primary task is to generate a detailed and structured specification document for the "Cisco Translator" project based on the provided requirements.

Follow these steps precisely:

1. Review the project description, target audience, and functional requirements.
2. Organize the requirements into categories (e.g., supported connections, user interface, command database, command execution, macros, logs, and non-functional requirements).
3. Create a comprehensive and unambiguous specification document.

### EXAMPLES ###

Example 1:
Input: User story for command execution
Rationale: The system should allow users to select a command from the list and automatically send it to the device.
Output: "The application shall provide a list of available commands in Russian. Upon user selection, the corresponding English command shall be sent to the device."

### CONSTRAINTS ###

- Tone: Formal and technical
- Style: Clear and concise
- Length: Comprehensive coverage of all requirements
- Do Not: Include any implementation details or design decisions.

### OUTPUT FORMAT ###

Provide the final output exclusively in the following format:

# Cisco Translator Specification Document

## 1. Introduction

### 1.1 Project Overview
- **Project Name:** Cisco Translator
- **Objective:** Develop a software application that enables users to interact with Cisco network devices using CLI commands translated into Russian.

### 1.2 Target Audience
- Students studying Cisco (e.g., CCNA program)
- Junior network engineers
- Users with limited English proficiency who want to work with Cisco devices

## 2. Functional Requirements

### 2.1 Supported Connections
- **SSH:** Support for SSH connections to Cisco devices.
- **Telnet:** Support for Telnet connections to Cisco devices.
- **COM Port:** Support for connections via COM port (RS232/USB-to-Serial).

### 2.2 Connection Formats
- **For SSH/Telnet:**
  - Device IP address
  - Username
  - Password
  - Port (default: 22 for SSH, 23 for Telnet)
- **For COM Port:**
  - Port selection (e.g., COM3, /dev/ttyUSB0)
  - Baud rate settings (e.g., 9600, 115200)

### 2.3 User Interface
- **Graphical Interface (GUI):** Provide a user-friendly GUI.
- **Connection Type Selection:** Allow users to select the type of connection.
- **Connection Status Display:** Display the current connection status.
- **Output Field:** Show the result of command execution.
- **Disconnect Button:** Provide a button to disconnect from the device.

### 2.4 Command Database
- **JSON Format:** Store commands in JSON format.
- **Russian Descriptions + English Commands:** Include Russian descriptions and corresponding English commands.
- **Command Categories:**
  - Information display mode (show)
  - Interface configuration
  - Routing
  - Security
  - Diagnostics
  - Device management

### 2.5 Command Execution
- **Automatic Command Sending:** Send the selected command to the device automatically.
- **Command Output Display:** Display the result of command execution in the application window.
- **Repeat Last Command:** Allow users to repeat the last command execution.

### 2.6 Macros (Command Groups)
- **Save Frequently Used Commands:** Allow users to save frequently used command sets.
- **Macro Examples:**
  - basic_info: Display firmware version and interface list.
  - configure_interface: Enter configuration mode and set IP.
- **Macro Execution:** Execute macros with a single button click.
- **Macro Editing and Deletion:** Allow users to edit and delete macros.

### 2.7 Logs and History
- **Command History:** Save the history of executed commands.
- **Log Export:** Allow users to export logs to .txt or .log files.

## 3. Non-Functional Requirements

### 3.1 Performance
- **Connection Establishment:** Establish a connection within 5 seconds.
- **Command Execution Delay:** Limit the delay between sending a command and receiving a response to 3 seconds.

### 3.2 Compatibility
- **Operating Systems:** Support Windows, Linux, macOS.
- **Device Compatibility:** Work with Cisco IOS, Catalyst, ISR, ASA (within SSH/Telnet/Serial protocols).

### 3.3 Security
- **Password Storage:** Store passwords securely (e.g., encrypted).
- **Data Storage:** Use secure data storage practices.

### 3.4 Usability
- **User-Friendly Interface:** Design a simple and intuitive interface.
- **Minimal Clicks:** Minimize the number of clicks required to execute commands.
- **Theme Support:** Support dark/light themes.
- **Extensibility:** Allow for the addition of new command categories and support for other manufacturers (e.g., Juniper, Huawei).

## 4. Conclusion

This specification document outlines the requirements for the "Cisco Translator" project, ensuring that the developed application meets the needs of its target audience and provides the required functionality, performance, and security.


### РОЛЬ ###

Выступаю в качестве старшего инженера-программиста и аналитика технических требований.

### КОНТЕКСТ ###

Справочная информация: Проект "Cisco Translator" направлен на разработку программного приложения, которое облегчает использование команд Cisco CLI через удобный интерфейс с переводом на русский язык.

Ключевая информация: Приложение будет подключаться к сетевым устройствам Cisco через SSH, Telnet или COM-порт, предоставлять список доступных команд на русском языке, позволять пользователям выбирать и выполнять команды, а также поддерживать часто используемые группы команд (макросы).

### ЗАДАЧА ###

Ваша основная задача - создать подробную и структурированную спецификацию для проекта "Cisco Translator" на основе предоставленных требований.

Точно выполните следующие действия:

1. Ознакомьтесь с описанием проекта, целевой аудиторией и функциональными требованиями.
2. Распределите требования по категориям (например, поддерживаемые подключения, пользовательский интерфейс, база данных команд, выполнение команд, макросы, журналы и нефункциональные требования).
3. Создайте всеобъемлющий и недвусмысленный технический документ.

### ПРИМЕРЫ ###

Пример 1:
Ввод: история пользователя для выполнения команды
Обоснование: Система должна позволять пользователям выбирать команду из списка и автоматически отправлять ее на устройство.
Вывод: "Приложение должно предоставлять список доступных команд на русском языке. После выбора пользователем соответствующая команда на английском языке должна быть отправлена на устройство."

### ОГРАНИЧЕНИЯ ###

- Тон: Официальный и технический
- Стиль: Четкий и сжатый
- Объем: Полный охват всех требований
- Не включать: какие-либо детали реализации или дизайнерские решения.

### ФОРМАТ ВЫВОДА ###

Предоставьте окончательный результат исключительно в следующем формате:

# Документ спецификации переводчика Cisco

## 1. Вступление

### 1.1 Обзор проекта
- **Название проекта:** Cisco Translator
- **Цель:** Разработать программное приложение, позволяющее пользователям взаимодействовать с сетевыми устройствами Cisco с помощью команд CLI, переведенных на русский язык.

### 1.2 Целевая аудитория
- Студенты, изучающие Cisco (например, по программе CCNA)
- Младшие сетевые инженеры
- Пользователи с ограниченным знанием английского языка, которые хотят работать с устройствами Cisco

## 2. Функциональные требования

### 2.1 Поддерживаемые соединения
- **SSH:** Поддержка SSH-подключений к устройствам Cisco.
- **Telnet:** Поддержка подключений по Telnet к устройствам Cisco.
- **COM-порт:** Поддержка подключений через COM-порт (RS232/USB-to-Serial).

## Форматы подключения # 2.2
- **Для SSH/Telnet:**
  - IP-адрес устройства
  - Имя пользователя
  - Пароль
  - Порт (по умолчанию: 22 для SSH, 23 для Telnet)
- **Для COM-порта:**
  - Выбор порта (например, COM3, /dev/ttyUSB0)
  - Настройки скорости передачи данных в бодах (например, 9600, 115200)

### 2.3 Пользовательский интерфейс
- ** Графический интерфейс (GUI):** Обеспечивает удобный графический интерфейс пользователя.
- ** Выбор типа подключения:** Позволяет пользователям выбирать тип подключения.
- **Отображение состояния соединения:** Отображение текущего состояния соединения.
- **Поле вывода:** Отображение результата выполнения команды.
- **Кнопка отключения:** Кнопка для отключения от устройства.

### 2.4 База данных команд
- **Формат JSON: ** Сохраняет команды в формате JSON.
- ** Описания на русском языке + команды на английском языке:** Включают описания на русском языке и соответствующие команды на английском языке.
- ** Категории команд:**
  - Режим отображения информации (show)
  - Конфигурация интерфейса
  - Маршрутизация
  - Безопасность
  - Диагностика
  - Управление устройством

### 2.5 Выполнение команд
- **Автоматическая отправка команды:** Отправка выбранной команды на устройство автоматически.
- **Отображение результатов выполнения команды:** Отображение результата выполнения команды в окне приложения.
- ** Повторение последней команды:** Позволяет пользователям повторить выполнение последней команды.

### 2.6 Макросы (группы команд)
- ** Сохранение часто используемых команд:** Позволяет пользователям сохранять часто используемые наборы команд.
- **Примеры макросов:**
  - basic_info: Отображает версию встроенного ПО и список интерфейсов.
  - configure_interface: войдите в режим настройки и установите IP.
- **Выполнение макросов: ** Выполнение макросов одним нажатием кнопки.
- ** Редактирование и удаление макросов:** Позволяет пользователям редактировать и удалять макросы.

### 2.7 Журналы и история
- **История команд:** Сохранение истории выполненных команд.
- ** Экспорт журналов: ** Позволяет пользователям экспортировать журналы в файлы формата .txt или .log.

## 3. Нерабочие требования

### 3.1 Производительность
- **Установка соединения:** Установите соединение в течение 5 секунд.
- **Задержка выполнения команды:** Ограничьте задержку между отправкой команды и получением ответа до 3 секунд.

### 3.2 Совместимость
- **Операционные системы: ** Поддержка Windows, Linux, macOS.
- **Совместимость с устройствами:** Работа с Cisco IOS, Catalyst, ISR, ASA (в рамках протоколов SSH/Telnet/Serial).

### 3.3 Безопасность
- **Хранение паролей: ** Надежно храните пароли (например, в зашифрованном виде).
- ** Хранение данных: ** Используйте методы безопасного хранения данных.

### 3.4 Удобство использования
- ** Удобный интерфейс:** Разработайте простой и интуитивно понятный интерфейс.
- ** Минимальное количество кликов: ** Минимизируйте количество кликов, необходимых для выполнения команд.
- ** Поддержка тем: ** Поддержка темных / светлых тем.
- ** Расширяемость:** Возможность добавления новых категорий команд и поддержка других производителей (например, Juniper, Huawei).

## 4. Вывод

В этом техническом документе излагаются требования к проекту "Cisco Translator", гарантирующие, что разработанное приложение будет отвечать потребностям своей целевой аудитории и обеспечит требуемую функциональность, производительность и безопасность.
